# Generated by Django 5.2.4 on 2025-08-10 12:08

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('directory_sync', '0002_alter_externaldirectory_options'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='syncjob',
            options={'verbose_name': 'Sync job', 'verbose_name_plural': 'Sync jobs'},
        ),
        migrations.AddField(
            model_name='externaldirectory',
            name='only_active',
            field=models.BooleanField(default=False, help_text='When ON, skip creating disabled accounts from the directory. If an existing user becomes disabled, mark them inactive. Active users continue to sync normally.'),
        ),
        migrations.AlterField(
            model_name='externaldirectory',
            name='allowed_domains',
            field=models.JSONField(blank=True, default=list, help_text='Optional allow-list of email domains to keep (e.g., ["school.edu"]). Note: currently informational; filtering can be added later if you want it enforced.'),
        ),
        migrations.AlterField(
            model_name='externaldirectory',
            name='credentials',
            field=models.JSONField(blank=True, default=dict, help_text='Connection JSON for the provider. For Azure: {"tenant_id": "...", "client_id": "...", "client_secret": "..." }. Stored in the DB; rotate/regenerate secrets if they ever leak.'),
        ),
        migrations.AlterField(
            model_name='externaldirectory',
            name='cron_expr',
            field=models.CharField(blank=True, help_text='Standard 5-field cron in your site’s local timezone (e.g., Asia/Baghdad). Example: 0 */2 * * *  → every 2 hours. Ignored when Schedule kind = Interval. Requires the ‘croniter’ package to honor cron exactly; otherwise falls back to hourly.', max_length=100),
        ),
        migrations.AlterField(
            model_name='externaldirectory',
            name='delta_link',
            field=models.CharField(blank=True, help_text='Microsoft Graph delta cursor. Managed automatically; clearing forces a fresh delta crawl.', max_length=500),
        ),
        migrations.AlterField(
            model_name='externaldirectory',
            name='deprovision_missing',
            field=models.BooleanField(default=False, help_text='When ON, users that disappear from the directory are deactivated locally (is_active=False). With delta sync, @removed entries also deactivate.'),
        ),
        migrations.AlterField(
            model_name='externaldirectory',
            name='include_groups',
            field=models.BooleanField(default=True, help_text='Fetch and store group IDs on each user (groups_cache). Increases API calls/time.'),
        ),
        migrations.AlterField(
            model_name='externaldirectory',
            name='include_licenses',
            field=models.BooleanField(default=True, help_text='Fetch license SKU codes per user (licenses). Increases API calls/time.'),
        ),
        migrations.AlterField(
            model_name='externaldirectory',
            name='interval_minutes',
            field=models.PositiveIntegerField(default=60, help_text='Run every N minutes (used when Schedule kind = Interval). Minimum = 1.'),
        ),
        migrations.AlterField(
            model_name='externaldirectory',
            name='is_enabled',
            field=models.BooleanField(default=True, help_text='If off, the scheduler ignores this connection (no runs).'),
        ),
        migrations.AlterField(
            model_name='externaldirectory',
            name='last_error',
            field=models.TextField(blank=True, help_text='Most recent error text, if any. Cleared on a successful run.'),
        ),
        migrations.AlterField(
            model_name='externaldirectory',
            name='last_run_at',
            field=models.DateTimeField(blank=True, help_text='When the last sync finished (shown in your local timezone in admin).', null=True),
        ),
        migrations.AlterField(
            model_name='externaldirectory',
            name='last_status',
            field=models.CharField(blank=True, help_text='Result of the last run (success / failed).', max_length=20),
        ),
        migrations.AlterField(
            model_name='externaldirectory',
            name='name',
            field=models.CharField(help_text='A short label shown in admin, e.g. “Main Entra ID (Prod)”.', max_length=100),
        ),
        migrations.AlterField(
            model_name='externaldirectory',
            name='next_run_at',
            field=models.DateTimeField(blank=True, help_text='When the scheduler plans to run next. ‘Run sync now’ sets this to now.', null=True),
        ),
        migrations.AlterField(
            model_name='externaldirectory',
            name='provider',
            field=models.CharField(choices=[('azure', 'Microsoft Entra ID (Azure AD)'), ('google', 'Google Workspace')], help_text='Which external directory to sync with.', max_length=20),
        ),
        migrations.AlterField(
            model_name='externaldirectory',
            name='schedule_kind',
            field=models.CharField(choices=[('interval', 'Interval (minutes)'), ('cron', 'Cron expression')], default='interval', help_text='Use a simple minute interval or a cron expression for when this sync should run.', max_length=10),
        ),
        migrations.AlterField(
            model_name='syncjob',
            name='created_count',
            field=models.IntegerField(default=0, help_text='How many user records were created in this run.'),
        ),
        migrations.AlterField(
            model_name='syncjob',
            name='deactivated_count',
            field=models.IntegerField(default=0, help_text='How many users were set inactive (disabled or missing).'),
        ),
        migrations.AlterField(
            model_name='syncjob',
            name='directory',
            field=models.ForeignKey(help_text='Which external directory this job was run against.', on_delete=django.db.models.deletion.CASCADE, to='directory_sync.externaldirectory'),
        ),
        migrations.AlterField(
            model_name='syncjob',
            name='finished_at',
            field=models.DateTimeField(blank=True, help_text='When this job finished (set automatically on success/failure).', null=True),
        ),
        migrations.AlterField(
            model_name='syncjob',
            name='notes',
            field=models.TextField(blank=True, help_text='Free-form notes and sampled errors from the sync (for quick triage).'),
        ),
        migrations.AlterField(
            model_name='syncjob',
            name='started_at',
            field=models.DateTimeField(auto_now_add=True, help_text='When this job started.'),
        ),
        migrations.AlterField(
            model_name='syncjob',
            name='status',
            field=models.CharField(default='running', help_text='Current state: running / success / failed.', max_length=20),
        ),
        migrations.AlterField(
            model_name='syncjob',
            name='updated_count',
            field=models.IntegerField(default=0, help_text='How many user records were updated in this run.'),
        ),
    ]
