"""
Django settings for workflow_automation project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-wpgjlaj=f(wf6mx+4ox&t=3rhy=&6f_38_r#pbz2j+@xk3zp4z'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Use your custom user model
AUTH_USER_MODEL = "accounts.User"
# Application definition
INSTALLED_APPS = [
    # Django core
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # my apps
    'core.apps.CoreConfig',
    "directory_sync",
    # Required by allauth
    "django.contrib.sites",
    # Your app with the custom user
    "accounts",
    # Auth stack
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.microsoft",
    "allauth.socialaccount.providers.google",
    # Optional security
    "axes",
]

SITE_ID = 1

# ------------------------
# Authentication backends
# ------------------------
AUTHENTICATION_BACKENDS = [
    # If using Axes standalone
    "axes.backends.AxesStandaloneBackend",  # comment out if not using Axes

    "django.contrib.auth.backends.ModelBackend",  # Django’s auth
    "allauth.account.auth_backends.AuthenticationBackend",  # allauth
]

# ------------------------
# Allauth configuration (new syntax)
# ------------------------
ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_USERNAME_BLACKLIST = {"*"}  # disables username usage completely

# Login method(s) allowed
ACCOUNT_LOGIN_METHODS = {"email"}  # only email login

# Signup form fields — * = required
ACCOUNT_SIGNUP_FIELDS = ["email*", "password1*", "password2*"]

# Redirect after login
LOGIN_REDIRECT_URL = "accounts:post_login"

# Custom account adapter for domain rules / SSO mapping
ACCOUNT_ADAPTER = "accounts.adapters.AccountAdapter"

# ------------------------
# Axes (optional) config
# ------------------------
AXES_FAILURE_LIMIT = 5
AXES_COOLOFF_TIME = 1  # hours
AXES_LOCKOUT_CALLABLE = None  # custom hook if needed

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # Optional (if you're using django-axes):
    "axes.middleware.AxesMiddleware",
]

ROOT_URLCONF = 'workflow_automation.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',

            ],
        },
    },
]

WSGI_APPLICATION = 'workflow_automation.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

# ✅ Static files (CSS, JS, etc.)
STATIC_URL = 'static/'
STATICFILES_DIRS = [
    BASE_DIR / "static",  # for global static files
]
STATIC_ROOT = BASE_DIR / "staticfiles"  # used when running collectstatic

# ✅ Media files (user uploads)
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / "media"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
